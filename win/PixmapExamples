From lchutson@netcom.com (Lawrence Hutson)
Newsgroups: comp.windows.x
Subject: Re: MultiColor pixmap labels
Date: Fri, 3 Jun 1994 20:29:26 GMT

Tom Horsley (tom@ssd.csd.harris.com) wrote:
: >If you can think of a better way, then I'm all for it.

: I don't know about better, but it is different: You could pick up the xpm
: library and define your pixmaps as xpm format data, then just use the
: xpm library to turn them into real pixmaps.

And here is an example program that will show you how to do it.

Lawrence C. Hutson, Consultant
On Assignment @ GTE Network Operations

Here it comes:
#
#This archive contains two example programs. Their purpose is to
#illustrate the use of "shaped" pixmaps on widget labels, as to which
#there have been many questions about lately.
#
#	seeShape - uses the method built into the Xpm lib.
#	seeClip - use a Clipping  method on the Xlib level.
#
#There is only one bug that I know about in seeClip. It occurs when you
#move a window over a partial part of the pixmap. That portion of the
#pixmap does not redraw, until you resize the window. Any help with
#this will be greatly appreciated. This example places the pixmap at
#different locations on the pushButton when you resize the window.
#Also, I have hardcoded values, as to the size of the pixmap. It would
#be nice if someone would put in a subroutine routine to get these values
#on the fly. There has been one more method mentioned that can be used to
#accomplish the shaped effect. It requires using the MIT shape extension.
#It would also be nice if someone could add an example for it.
#
#Please, if you make any changes or add some features, send them to me.
#
#Enjoy
#Lawrence C. Hutson, Consultant
#On Assignment @ GTE Network Operations
#
#lchutson@netcom.com
#
#
#!/bin/sh
# This is a SHell ARchive(shar), meaning:
# 1. Remove everything above the #!/bin/sh line.
# 2. Save the resulting text in a file.
# 3. Execute the file with /bin/sh (not csh) to create the files:
#
# List of Archived Files:
#
#      Makefile
#      clipmask.c
#	   shapedpm.c
#      xpm.h
#      cartoon.xpm
#
# This archive created: Wed Feb  9 14:03:22 MST 1994
#
echo "x - Makefile (910 characters)"
if [ -f "Makefile" ]
then echo "$0: will not over-write existing file 'Makefile'"
else
sed 's/^X\.//' <<\SHARC_EOF > Makefile
X.############################### MAKEFILE ################################
X.# This one works with GNU make.
X.############################### PLATFORM ###############################
X.#UNAME := $(shell uname)
X.############################### VARIABLES ###############################
X.DEFINES         = -D_NO_PROTO
X.DEBUG           = -g
X.CFLAGS          = $(INCLUDEPATHS) $(DEFINES) $(DEBUG) 
X.LIBS			= -lXm -lXt -lX11 -lm -lPW  -lXpm 
X.#LIBPATHS       = -L/home/local/X11R5/lib -L/usr/lib/X11 -L.
X.#LIBS           = -lMrm -lXm -lXt -lX11 -lXpm_$(UNAME)
X.
X.SHAPEOBJS = shapedpm.o 
X.CLIPOBJS = clipmask.o 
X.
X..c.o:
X.	$(CC) -c $(CFLAGS) $< -o $@
X.
X.all: Makefile seeShape seeClip
X.
X.seeShape:  $(SHAPEOBJS)
X.	$(CC) $(CFLAGS) $(SHAPEOBJS) $(LIBS) -o seeShape
X.
X.seeClip:  $(CLIPOBJS)
X.	$(CC) $(CFLAGS) $(CLIPOBJS) $(LIBS) -o seeClip
X.
X.clean:
X.	@/bin/rm -f *.o  see
X.
X.# DO NOT DELETE THIS LINE -- make depend depends on it.
X.
X.shapedpm.o: xpm.h
SHARC_EOF
if [ 910 -ne `wc -c < Makefile` ]
then echo "$0: transmit error 'Makefile' (should have been 910 chars)"
fi
fi # end of overwriting check
echo "x - clipmask.c (2897 characters)"
if [ -f "clipmask.c" ]
then echo "$0: will not over-write existing file 'clipmask.c'"
else
sed 's/^X\.//' <<\SHARC_EOF > clipmask.c
X.#include <stdio.h>
X.#ifdef XOPEN_CATALOG
X.#include <locale.h>
X.#endif
X.#include <X11/Intrinsic.h>
X.#include <X11/StringDefs.h>
X.#include <Xm/Xm.h>
X.#include <Xm/DrawnB.h>
X.#include "xpm.h"
X.#include "cartoon.xpm"
X.
X.XmFontList    ConvertFontList( char *fontlist_str );
X.void makeClipMask( Widget);
X.
X.Widget			TheButton;
X.Display			*TheDisplay;
X.Pixmap return_pixmap, return_shape_pixmap;
X.Widget			TheTopLevel;
X.
X.main(argc,argv)
X.int argc; 
X.char *argv[];
X.{
X.	XtAppContext	TheAppContext;
X.	int				TheScreen;
X.	int rc;
X.	XmString str;
X.
X.#ifdef XOPEN_CATALOG
X.setlocale(LC_ALL, "");
X.#endif
X.
X.
X.  	TheTopLevel = XtAppInitialize(&TheAppContext, argv[0], NULL, 0, &argc, 
X.			(String *)argv, (String *)NULL, NULL, 0);
X.
X.	TheDisplay = XtDisplay(TheTopLevel);
X.	TheScreen = XDefaultScreen(TheDisplay);
X.
X.	str = XmStringCreateSimple("This  is  Fun");
X.
X.	TheButton = XtVaCreateManagedWidget( "button", 
X.		xmDrawnButtonWidgetClass, TheTopLevel, 
X.		XmNlabelType, XmSTRING, XmNlabelString, str,
X.		XmNfontList, ConvertFontList( "rom22" ),
X.		XmNwidth, 250, XmNheight, 250, NULL );
X.
X.    rc = XpmCreatePixmapFromData(TheDisplay,
X.        XRootWindowOfScreen(XtScreen(TheTopLevel)),
X.        cartoon, &return_pixmap, &return_shape_pixmap, NULL);
X.
X.	if (!( rc == XpmSuccess )) {
X.	   printf( "bad return code: %d\n", rc );
X.	   exit(rc);
X.	}
X.
X.	XtAddEventHandler( TheButton, ExposureMask,
X.		False, makeClipMask, (XtPointer) TheButton  );
X.
X.	XmStringFree(str);
X.
X.	XtRealizeWidget(TheTopLevel);
X.	XtAppMainLoop (TheAppContext);
X.
X.}
X.
X.
X.void makeClipMask(Widget button)
X.{
X.
X.	XGCValues   values;
X.	static GC maskgc = (GC) NULL;
X.	Dimension h,w;
X.	Position x,y;
X.	static	short state = 0;
X.
X.
X.	values.foreground   = (Pixel)0;
X.	values.background   = (Pixel)~0;
X.	values.graphics_exposures = False;
X.	values.function = GXcopy;
X.	maskgc = XtGetGC(TheButton, (unsigned) GCBackground | GCForeground |
X.					   GCFunction | GCGraphicsExposures, &values);
X.
X.	XSetClipMask(TheDisplay, maskgc, return_shape_pixmap);
X.	XtVaGetValues( button, XmNheight, &h, XmNwidth, &w, NULL);
X.
X.	/*	I get the 128's form the pixmap file itself.	You
X.		could get these on the fly !	*/
X.
X.	if ( state == 0 ) {
X.		y = ((h / 2) - 64);
X.		state = 1;
X.	} else if ( state == 1 ) {
X.		y = ((h / 2) - 150);
X.	    state = 2;	
X.	} else {
X.		y = ((h / 2) + 50);
X.	    state = 0;	
X.	}
X.	x = ((w / 2) - 64);
X.
X.
X.	XSetClipOrigin(TheDisplay, maskgc, x , y);
X.	XCopyArea(TheDisplay, return_pixmap, XtWindow(TheButton), 
X.		maskgc, 0, 0, 128, 128, x, y);
X.
X.
X.}
X.
X.XmFontList    ConvertFontList( char *fontlist_str )
X.{
X.    XrmValue    from, to;
X.    XmFontList  fontlist = NULL;
X.    Boolean     status;
X.	printf("fontlist_str = %s\n", fontlist_str);
X.
X.    from.size = strlen( fontlist_str ) + 1;
X.    from.addr = fontlist_str;
X.
X.    to.size = sizeof(XmFontList);
X.    to.addr = (caddr_t) &fontlist;
X.
X.    status = XtConvertAndStore( TheTopLevel,
X.                    XmRString, &from,
X.                    XmRFontList, &to );
X.
X.    return ( fontlist );
X.}
X.
SHARC_EOF
if [ 2897 -ne `wc -c < clipmask.c` ]
then echo "$0: transmit error 'clipmask.c' (should have been 2897 chars)"
fi
fi # end of overwriting check
echo "x - shapedpm.c (2278 characters)"
if [ -f "shapedpm.c" ]
then echo "$0: will not over-write existing file 'shapedpm.c'"
else
sed 's/^X\.//' <<\SHARC_EOF > shapedpm.c
X.#include <stdio.h>
X.#ifdef XOPEN_CATALOG
X.#include <locale.h>
X.#endif
X.#include <X11/Intrinsic.h>
X.#include <X11/StringDefs.h>
X.#include <Xm/Xm.h>
X.#include <Xm/DrawnB.h>
X.#include "xpm.h"
X.#include "cartoon.xpm"
X.
X.int CreateShapedPixmap(
X.    Widget TheTopLevel, Pixmap *pm, char ** pmData, Widget TheWidget);
X.
X.
X.main(argc,argv)
X.int argc; 
X.char *argv[];
X.{
X.	int				TheScreen;
X.	XtAppContext	TheAppContext;
X.	Display			*TheDisplay;
X.	Widget			TheTopLevel, TheButton;
X.	Pixmap return_pixmap, return_shape_pixmap;
X.    XpmAttributes  XpmAttr;
X.    XpmColorSymbol XpmTransparentColor[1] = {{ NULL, "none", 0 }};
X.	Pixel bgc;
X.	int rc;
X.
X.#ifdef XOPEN_CATALOG
X.setlocale(LC_ALL, "");
X.#endif
X.
X.  	TheTopLevel = XtAppInitialize(&TheAppContext, argv[0], NULL, 0, &argc, 
X.			(String *)argv, (String *)NULL, NULL, 0);
X.
X.	TheDisplay = XtDisplay(TheTopLevel);
X.	TheScreen = XDefaultScreen(TheDisplay);
X.
X.	TheButton = XtVaCreateManagedWidget( "button", 
X.		xmDrawnButtonWidgetClass, TheTopLevel, 
X.		XmNlabelType, XmPIXMAP, 
X.		XmNwidth, 75, XmNheight, 75, NULL );
X.
X.	rc =  CreateShapedPixmap( 
X.		TheTopLevel, &return_pixmap, cartoon, TheButton);
X.
X.	if (!( rc == XpmSuccess )) {
X.	   printf( "bad return code: %d\n", rc );
X.	   exit(rc);
X.	}
X.
X.	XtVaSetValues( TheButton, XmNlabelPixmap, return_pixmap, NULL );
X.
X.	XtRealizeWidget(TheTopLevel);
X.	XtAppMainLoop (TheAppContext);
X.
X.}
X.
X.int CreateShapedPixmap(
X.    Widget TheTopLevel, Pixmap *pm, char ** pmData, Widget TheWidget)
X.{
X.    Display         *TheDisplay;
X.    int             TheScreen;
X.    XpmAttributes   XpmAttr;
X.    XpmColorSymbol  XpmTransparentColor[1] = {{ NULL, "none", 0 }};
X.    Pixel           bgColor;
X.    Pixmap          mask;
X.    int             depth, status;
X.   
X.
X.    TheDisplay = XtDisplay(TheTopLevel);
X.    TheScreen = XDefaultScreen(TheDisplay);
X.
X.    XtVaGetValues( TheWidget, 
X.		XmNbackground, &bgColor, XmNdepth, &depth, NULL );
X.
X.    XpmTransparentColor[0].pixel = bgColor;
X.    XpmAttr.valuemask    = XpmColorSymbols | XpmCloseness | XpmDepth;
X.    XpmAttr.colorsymbols = XpmTransparentColor;
X.    XpmAttr.numsymbols   = 1;
X.    XpmAttr.closeness    = 65535;
X.    XpmAttr.depth        = depth;
X.
X.    status = XpmCreatePixmapFromData(TheDisplay,
X.        XRootWindowOfScreen(XtScreen(TheTopLevel)),
X.        pmData, pm, &mask, &XpmAttr);
X.
X.    return ( status );
X.}
SHARC_EOF
if [ 2278 -ne `wc -c < shapedpm.c` ]
then echo "$0: transmit error 'shapedpm.c' (should have been 2278 chars)"
fi
fi # end of overwriting check
echo "x - xpm.h (12048 characters)"
if [ -f "xpm.h" ]
then echo "$0: will not over-write existing file 'xpm.h'"
else
sed 's/^X\.//' <<\SHARC_EOF > xpm.h
X./* Copyright 1990-93 GROUPE BULL -- See license conditions in file COPYRIGHT */
X./*****************************************************************************\
X.* xpm.h:                                                                      *
X.*                                                                             *
X.*  XPM library                                                                *
X.*  Include file                                                               *
X.*                                                                             *
X.*  Developed by Arnaud Le Hors                                                *
X.\*****************************************************************************/
X.
X.#ifndef XPM_h
X.#define XPM_h
X.
X./*
X. * first some identification numbers:
X. * the following revision numbers is determined with the following rule:
X. * SO Major number = LIB minor version number.
X. * SO Minor number = LIB sub-minor version number.
X. * e.g: Xpm version 3.2f
X. *      we forget the 3 which is the format number, 2 gives 2, and f gives 6.
X. *      thus we have XpmVersion = 2 and XpmRevision = 6
X. *      which gives  SOXPMLIBREV = 2.6
X. */
X.#define XpmFormat 3
X.#define XpmVersion 3
X.#define XpmRevision 0
X.
X.#ifndef XPM_NUMBERS
X.
X.#ifdef VMS
X.#include "decw$include:Xlib.h"
X.#include "decw$include:Xutil.h"
X.#else
X.#include <X11/Xlib.h>
X.#include <X11/Xutil.h>
X.#endif
X.
X./* let's define Pixel if it is not done yet */
X.#if ! defined(_XtIntrinsic_h) && ! defined(PIXEL_ALREADY_TYPEDEFED)
X.typedef unsigned long Pixel;		/* Index into colormap */
X.#define PIXEL_ALREADY_TYPEDEFED
X.#endif
X.
X./* Return ErrorStatus codes:
X. * null     if full success
X. * positive if partial success
X. * negative if failure
X. */
X.
X.#define XpmColorError    1
X.#define XpmSuccess       0
X.#define XpmOpenFailed   -1
X.#define XpmFileInvalid  -2
X.#define XpmNoMemory     -3
X.#define XpmColorFailed  -4
X.
X./* the following should help people wanting to use their own functions */
X.#define XpmFree(ptr) free(ptr)
X.
X.typedef struct {
X.    char *name;				/* Symbolic color name */
X.    char *value;			/* Color value */
X.    Pixel pixel;			/* Color pixel */
X.}      XpmColorSymbol;
X.
X.typedef struct {
X.    char *name;				/* name of the extension */
X.    unsigned int nlines;		/* number of lines in this extension */
X.    char **lines;			/* pointer to the extension array of
X.					 * strings */
X.}      XpmExtension;
X.
X.typedef struct {
X.    unsigned long valuemask;		/* Specifies which attributes are
X.					 * defined */
X.
X.    Visual *visual;			/* Specifies the visual to use */
X.    Colormap colormap;			/* Specifies the colormap to use */
X.    unsigned int depth;			/* Specifies the depth */
X.    unsigned int width;			/* Returns the width of the created
X.					 * pixmap */
X.    unsigned int height;		/* Returns the height of the created
X.					 * pixmap */
X.    unsigned int x_hotspot;		/* Returns the x hotspot's
X.					 * coordinate */
X.    unsigned int y_hotspot;		/* Returns the y hotspot's
X.					 * coordinate */
X.    unsigned int cpp;			/* Specifies the number of char per
X.					 * pixel */
X.    Pixel *pixels;			/* List of used color pixels */
X.    unsigned int npixels;		/* Number of pixels */
X.    XpmColorSymbol *colorsymbols;	/* Array of color symbols to
X.					 * override */
X.    unsigned int numsymbols;		/* Number of symbols */
X.    char *rgb_fname;			/* RGB text file name */
X.    unsigned int nextensions;		/* number of extensions */
X.    XpmExtension *extensions;		/* pointer to array of extensions */
X.
X.    /* Color Allocation Directives */
X.    unsigned int exactColors;		/* Only use exact colors for visual */
X.    unsigned int closeness;		/* Allowable RGB deviation */
X.    unsigned int red_closeness;		/* Allowable red deviation */
X.    unsigned int green_closeness;	/* Allowable green deviation */
X.    unsigned int blue_closeness;	/* Allowable blue deviation */
X.    int color_key;			/* Use colors from this color set */
X.
X.}      XpmAttributes;
X.
X./* Xpm attribute value masks bits */
X.#define XpmVisual	   (1L<<0)
X.#define XpmColormap	   (1L<<1)
X.#define XpmDepth	   (1L<<2)
X.#define XpmSize		   (1L<<3)	/* width & height */
X.#define XpmHotspot	   (1L<<4)	/* x_hotspot & y_hotspot */
X.#define XpmCharsPerPixel   (1L<<5)
X.#define XpmColorSymbols	   (1L<<6)
X.#define XpmRgbFilename	   (1L<<7)
X./************************************ there was
X.#define XpmInfos	   (1L<<8) all infos members
X.*/
X.#define XpmExtensions      (1L<<10)
X.
X.#define XpmReturnPixels	   (1L<<9)
X./************************************ there was
X.#define XpmReturnInfos	   XpmInfos
X.*/
X.#define XpmReturnExtensions XpmExtensions
X.
X.#define XpmExactColors     (1L<<11)
X.#define XpmCloseness	   (1L<<12)
X.#define XpmRGBCloseness	   (1L<<13)
X.#define XpmColorKey	   (1L<<14)
X.
X./*
X. * color keys for visual type, they must fit along with the number key of
X. * each related element in xpmColorKeys[] defined in xpmP.h
X. */
X.#define XPM_MONO	2
X.#define XPM_GREY4	3
X.#define XPM_GRAY4	3
X.#define XPM_GREY 	4
X.#define XPM_GRAY 	4
X.#define XPM_COLOR	5
X.
X.
X.typedef struct {
X.    char *string;		/* characters string */
X.    char *symbolic;		/* symbolic name */
X.    char *m_color;		/* monochrom default */
X.    char *g4_color;		/* 4 level grayscale default */
X.    char *g_color;		/* other level grayscale default */
X.    char *c_color;		/* color default */
X.}      XpmColor;
X.
X.typedef struct {
X.    unsigned int width;		/* image width */
X.    unsigned int height;	/* image height */
X.    unsigned int cpp;		/* number of characters per pixel */
X.    unsigned int ncolors;	/* number of colors */
X.    XpmColor *colorTable;	/* list of related colors */
X.    unsigned int *data;		/* image data */
X.}      XpmImage;
X.
X.typedef struct {
X.    char *hints_cmt;		/* Comment of the hints section */
X.    char *colors_cmt;		/* Comment of the colors section */
X.    char *pixels_cmt;		/* Comment of the pixels section */
X.}      XpmInfos;
X.
X.
X./*
X. * minimal portability layer between ansi and KR C
X. */
X.
X./* forward declaration of functions with prototypes */
X.
X.#if __STDC__ || defined(__cplusplus) || defined(c_plusplus)
X. /* ANSI || C++ */
X.#define FUNC(f, t, p) extern t f p
X.#define LFUNC(f, t, p) static t f p
X.#else					/* K&R */
X.#define FUNC(f, t, p) extern t f()
X.#define LFUNC(f, t, p) static t f()
X.#endif					/* end of K&R */
X.
X.
X./*
X. * functions declarations
X. */
X.
X.#ifdef __cplusplus
X.extern "C" {
X.#endif
X.
X.    FUNC(XpmCreatePixmapFromData, int, (Display *display,
X.					Drawable d,
X.					char **data,
X.					Pixmap *pixmap_return,
X.					Pixmap *shapemask_return,
X.					XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateDataFromPixmap, int, (Display *display,
X.					char ***data_return,
X.					Pixmap pixmap,
X.					Pixmap shapemask,
X.					XpmAttributes *attributes));
X.
X.    FUNC(XpmReadFileToPixmap, int, (Display *display,
X.				    Drawable d,
X.				    char *filename,
X.				    Pixmap *pixmap_return,
X.				    Pixmap *shapemask_return,
X.				    XpmAttributes *attributes));
X.
X.    FUNC(XpmWriteFileFromPixmap, int, (Display *display,
X.				       char *filename,
X.				       Pixmap pixmap,
X.				       Pixmap shapemask,
X.				       XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateImageFromData, int, (Display *display,
X.				       char **data,
X.				       XImage **image_return,
X.				       XImage **shapemask_return,
X.				       XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateDataFromImage, int, (Display *display,
X.				       char ***data_return,
X.				       XImage *image,
X.				       XImage *shapeimage,
X.				       XpmAttributes *attributes));
X.
X.    FUNC(XpmReadFileToImage, int, (Display *display,
X.				   char *filename,
X.				   XImage **image_return,
X.				   XImage **shapeimage_return,
X.				   XpmAttributes *attributes));
X.
X.    FUNC(XpmWriteFileFromImage, int, (Display *display,
X.				      char *filename,
X.				      XImage *image,
X.				      XImage *shapeimage,
X.				      XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateImageFromBuffer, int, (Display *display,
X.					 char *buffer,
X.					 XImage **image_return,
X.					 XImage **shapemask_return,
X.					 XpmAttributes *attributes));
X.
X.    FUNC(XpmCreatePixmapFromBuffer, int, (Display *display,
X.					  Drawable d,
X.					  char *buffer,
X.					  Pixmap *pixmap_return,
X.					  Pixmap *shapemask_return,
X.					  XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateBufferFromImage, int, (Display *display,
X.					 char **buffer_return,
X.					 XImage *image,
X.					 XImage *shapeimage,
X.					 XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateBufferFromPixmap, int, (Display *display,
X.					  char **buffer_return,
X.					  Pixmap pixmap,
X.					  Pixmap shapemask,
X.					  XpmAttributes *attributes));
X.
X.    FUNC(XpmReadFileToBuffer, int, (char *filename, char **buffer_return));
X.    FUNC(XpmWriteFileFromBuffer, int, (char *filename, char *buffer));
X.
X.    FUNC(XpmReadFileToData, int, (char *filename, char ***data_return));
X.    FUNC(XpmWriteFileFromData, int, (char *filename, char **data));
X.
X.    FUNC(XpmAttributesSize, int, ());
X.    FUNC(XpmFreeAttributes, void, (XpmAttributes *attributes));
X.    FUNC(XpmFreeExtensions, void, (XpmExtension *extensions,
X.				   int nextensions));
X.    FUNC(XpmFreeXpmImage, void, (XpmImage *image));
X.    FUNC(XpmFreeXpmInfos, void, (XpmInfos *infos));
X.    FUNC(XpmGetErrorString, char *, (int errcode));
X.
X.    /* XpmImage functions */
X.    FUNC(XpmReadFileToXpmImage, int, (char *filename,
X.				      XpmImage *image,
X.				      XpmAttributes *attributes,
X.				      XpmInfos *infos));
X.
X.    FUNC(XpmWriteFileFromXpmImage, int, (char *filename,
X.					 XpmImage *image,
X.					 XpmAttributes *attributes,
X.					 XpmInfos *infos));
X.
X.    FUNC(XpmCreatePixmapFromXpmImage, int, (Display *display,
X.					    Drawable d,
X.					    XpmImage *image,
X.					    Pixmap *pixmap_return,
X.					    Pixmap *shapemask_return,
X.					    XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateImageFromXpmImage, int, (Display *display,
X.					   XpmImage *image,
X.					   XImage **image_return,
X.					   XImage **shapeimage_return,
X.					   XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateXpmImageFromImage, int, (Display *display,
X.					   XImage *image,
X.					   XImage *shapeimage,
X.					   XpmImage *xpmimage,
X.					   XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateXpmImageFromPixmap, int, (Display *display,
X.					    Pixmap pixmap,
X.					    Pixmap shapemask,
X.					    XpmImage *xpmimage,
X.					    XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateDataFromXpmImage, int, (char ***data_return,
X.					  XpmImage *image,
X.					  XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateXpmImageFromData, int, (char **data,
X.					  XpmImage *image,
X.					  XpmAttributes *attributes));
X.
X.    FUNC(XpmCreateXpmImageFromBuffer, int, (char *buffer,
X.					    XpmImage *image,
X.					    XpmAttributes *attributes,
X.					    XpmInfos *infos));
X.
X.    FUNC(XpmCreateBufferFromXpmImage, int, (char **buffer_return,
X.					    XpmImage *image,
X.					    XpmAttributes *attributes,
X.					    XpmInfos *infos));
X.
X.#ifdef __cplusplus
X.}					/* for C++ V2.0 */
X.#endif
X.
X.
X./* backward compatibility */
X.
X./* for version 3.0c */
X.#define XpmPixmapColorError  XpmColorError
X.#define XpmPixmapSuccess     XpmSuccess
X.#define XpmPixmapOpenFailed  XpmOpenFailed
X.#define XpmPixmapFileInvalid XpmFileInvalid
X.#define XpmPixmapNoMemory    XpmNoMemory
X.#define XpmPixmapColorFailed XpmColorFailed
X.
X.#define XpmReadPixmapFile(dpy, d, file, pix, mask, att) \
X.    XpmReadFileToPixmap(dpy, d, file, pix, mask, att)
X.#define XpmWritePixmapFile(dpy, file, pix, mask, att) \
X.    XpmWriteFileFromPixmap(dpy, file, pix, mask, att)
X.
X./* for version 3.0b */
X.#define PixmapColorError  XpmColorError
X.#define PixmapSuccess     XpmSuccess
X.#define PixmapOpenFailed  XpmOpenFailed
X.#define PixmapFileInvalid XpmFileInvalid
X.#define PixmapNoMemory    XpmNoMemory
X.#define PixmapColorFailed XpmColorFailed
X.
X.#define ColorSymbol XpmColorSymbol
X.
X.#define XReadPixmapFile(dpy, d, file, pix, mask, att) \
X.    XpmReadFileToPixmap(dpy, d, file, pix, mask, att)
X.#define XWritePixmapFile(dpy, file, pix, mask, att) \
X.    XpmWriteFileFromPixmap(dpy, file, pix, mask, att)
X.#define XCreatePixmapFromData(dpy, d, data, pix, mask, att) \
X.    XpmCreatePixmapFromData(dpy, d, data, pix, mask, att)
X.#define XCreateDataFromPixmap(dpy, data, pix, mask, att) \
X.    XpmCreateDataFromPixmap(dpy, data, pix, mask, att)
X.
X.#endif /* XPM_NUMBERS */
X.#endif
SHARC_EOF
if [ 12048 -ne `wc -c < xpm.h` ]
then echo "$0: transmit error 'xpm.h' (should have been 12048 chars)"
fi
fi # end of overwriting check
echo "x - cartoon.xpm (17469 characters)"
if [ -f "cartoon.xpm" ]
then echo "$0: will not over-write existing file 'cartoon.xpm'"
else
sed 's/^X\.//' <<\SHARC_EOF > cartoon.xpm
X./* XPM2 C */
X./*  @(#)58      1.2  com/XDT/bitmaps/xdt_p_misc/catoon.px, gos, gos320 7/26/91 16:13:42   */
X./*
X. *     COMPONENT_NAME:       XDT                 AIXwindows Desktop
X. *
X. *     ORIGINS:  53
X. *
X. *     Copyright (C) 1991 International Business Machines Corporation
X. *     Copyright (C) 1991 IXI Limited
X. *
X. *     Module:       xdt_p_misc/catoon.px
X. *     Description:  pixmap of icon
X. *
X. */
X.
X.
X.static char * cartoon []  = {
X."128 128 6 1",
X."   s none  c none",
X.". c #000000000000",
X."X c #FFFF7F7F5555",
X."o c #FFFFFFFFFFFF",
X."O c #AAAAAAAAAAAA",
X."+ c #E3E3B4B4E3E3",
X."                                                                                                                                ",
X."                                                                                                                                ",
X."                                                                                                                                ",
X."                                                                                                                                ",
X."                                                                                                                                ",
X."                         ..                                                                                                     ",
X."                          ..                                  .                                                                 ",
X."                            .                                  .                                                                ",
X."                                                               .            .         .      ..                                 ",
X."                                .         .                     .       ..            .        . .      ..                   .. ",
X."                                 .        .                     .      ..             .         .     ..   ...........    ...   ",
X."                                  ...     .         .           ..    .      ....     .          ..  ......XXXXXXXXXXX...       ",
X."                .    .                    .          ....       ..   .          ..    .          .....XXXXXXXXXXXXXXXXX..       ",
X."                 .. .   ..           .                    ..    ..              .  .  ...    ...XX..XXXXXXXXXXXXXXXXXXXXXXX...  ",
X."   ..............   . .                .                    .....................   ...  ...XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.. ",
X."   ..XXXXXXXXXXXX.....                  .  .             .....XXXXXXXXXXXXXXXXXXX........XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX. ",
X."    ..XXXXXXXXXXXXX..........    .      .. .           ..XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.....XXXXX. ",
X."      ..XXXXXX.X.XXXXXXXXXXXX..     ..    ..        ..XXXXXX...........XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX. ..  ..XXX. ",
X."        ..XXXXXXXX.XXXXXXXXXXX..     ...  ...      .XXXXX...ooooooooooo..XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX..  ..   ..XX. ",
X."           ...XXXXX....XXXXXXXXX..      .....   ..XXXXX..oooooooooooooooo..XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.....   . ...    .. ",
X.".       .........XXXXX...XXXXXXXXXXX........XXXXXXXXX..oooooooooooooooooooo.XXXXXXXXXXXXXXXXXXXXXXXXXXXX......      . .  .      ",
X."    ..       .  ..XXXXX......XXXXXXXXXXXXX.......XXX..ooooooooooooooooooooo.XXXXXXXXXXXXXXXXXXXXXXXXXX......       .            ",
X."             .     .XXXX.......XXXXXXXXX..ooooooo....ooo..oooooooooooooooooo.XXXXXXXXXXXXXXXXXXXXXX.......         .            ",
X."                   ..XXXX......XXXXXXXX.ooooooooooo..oo....ooooooooooooooooo.XXXXXXXXXXXXXXXXXXXXX........                      ",
X."                     ..XXXX...XXXXXXXX.ooooooooooooo.oo....ooooooooooooooooo.XXXXXXXXXXXXXXXXXXX.......        .                ",
X."                      .XXXXXXXXXXXXXX.oo..oooooooooo.ooo..oooooooooooooooooo.XXXXXXXXXXXXXXXXXX......   .       ..              ",
X."        ...................XXXXXXXXXXoo....oooooooooo.ooooooooooooooooooooo.XXXXXXXXXXXXXXXX......       .        .             ",
X."      ..           .....XXXXXXXXXXXXXoo....ooooooooooo.oooooooooooooooooooo.XXXXXXXXXXXXXXXX.....         ..       .            ",
X."                 .. .   ..XXXXXXXXXXX.oo..ooooooo.............ooooooooooo..XXXXXXXXXXXXXXXX.......                              ",
X."                .  .     .XXXXXXXXXXX.oooooooooo....O..........oooooooooo.XXXXXXXXXXXXXXXX..                                    ",
X."                          ..XXXXXXXXXX.ooooooooo....OO..OO......oo..............XXXXXXXXXX. . ...                               ",
X."              ..  .         .XXXXXX.................O.............oooooooooooooo....XXXXX..  .      .                           ",
X."              .  .           .X....oooooooooooooo............ooooooooooooooooooooooo...XX.    ..        ...                     ",
X."             .  .            ...ooooooooooooooooooooo.......oooooooooooooooooooooooooo....     ..         .                     ",
X."                            .ooooooooooooooooooooooooo....ooooooooooooooooooooooooooooooo..                                     ",
X."               .          ..oooooooooooooooooooooooooo...ooooooooooooooooooooooooooooooooo..                                    ",
X."              .         ..oooooooooooooooooooooooooooo..oooooooooooooooooooooooooooooooooooo                                    ",
X."                       .oooooooooooooooooooooooooooo..oooooooooooooooooooooooooooooooooooooo.                                   ",
X."                      .ooooooooooooooooooooooooooooo.oooooooooooooooooooooooooooooooooooooooo.                                  ",
X."                      .oooooooooooooooooooooooooooo.ooooooooooooooooooooooooooooooooooooooooo..                                 ",
X."                     .oooooooooooooooooooooooooooo..oooooooooooooooooooooooooooooooooooooooooo..                                ",
X."                    ..oooooooooooooooooooooooooooo.oooooooooooooooooooooooooooooooooooooooooooo.                                ",
X."                    .ooooooooooooooooooooooooooooo.oooooooooooooooooooooooooooooooooooooooooooo.                                ",
X."                    .oooooooooooooooooooooooooooo.ooooooooooooooooooooooooooooooooooooooooooooo.                                ",
X."                    .oooooooooooooooooooooooooooo.ooooooooooooooooooooooooooooooooooooooooooooo.                                ",
X."                    .oooooooooooooooooooooooooooo.ooooooooooooooooooooooooooooooooooooooooooooo.                                ",
X."                    ..ooooooooooooooooooooooooooo.ooooooooooooooooooooooooooooooooooooooooooooo.                                ",
X."                     .ooooooooooooooooooooooooooo.oooooo.oooooooooooooooooooooooooooooooooooooo.                                ",
X."                      .oooooooooooooooooooooooooo..ooo.oooooooooooooooooooooooooooooooooooooooo.                                ",
X."       ......         .oooo.ooooooooooooooooooooo....ooo.oo.oooooooooooooooooooooooooo.oooooo..                                 ",
X."             ......... ...o..oooooooooooooooooo.ooo..oo.oo.ooo..ooo.oooooooooooooooooo.ooooo..                                  ",
X."                        ..oo...oo.oooo.ooooooo.ooo.oo..ooo.ooooo...ooooooooooo.ooooo..o.o.o.                                    ",
X."                         ...oo.......o.ooo.o.ooo.o.ooo..ooo.o.oooooo.oooooooo.....................                              ",
X."                           ...ooooooo...oooooo.oooo.oooo..oooooo..ooooooooo.oooo.ooooooo.                                       ",
X."                             .....oooooo...ooooo.o.oooo..XX..ooooooooooooooo.oo.oo.....                                         ",
X."                        ....      .....oo.oooooooooo..XXXXXX.......oooooooooooooo.....                                          ",
X."                    ....              ..............XXXXXXXX.....................XXX...                                         ",
X."                 .                .........    .XXXXXXXXXXXX..................XXXXXX  . .                                       ",
X."              ...                       .       .XXXXXXXXXXX..................XXXXXX  .. .                                      ",
X."            ..                       ..          ..XXXXXXXXX..................XXXX..   .   .                                    ",
X."       ...                                          XXXXXXXX..................XXXX.     .   .                                   ",
X."   ....                                    ..........XXXXXXX..................XXX.            .                                 ",
X."  ..                                    ...         .XXXXXXX..................XXX.             .                                ",
X."                                                     .XXXXXX..................XXX.              ..                              ",
X."                                                 ... .XXXXXX..................XXX.                                              ",
X."                                                ...  ..XXXXX..................XXX.                ..                            ",
X."                                           ...  .     .XXXXX..................XXX..........         ..                          ",
X."                                               .      ..XXXX..................XXX..       ...                                   ",
X."                                              .        .XXXX..................XXX.                    .                         ",
X."                                             ..        .XXXX..................XXX.       .            .                         ",
X."                                                       .XXXX..................XXX.  ....                                        ",
X."                                                       .XXXX..................XXX.  ..                                          ",
X."                                                ....   .XXXX..................XXX.                                              ",
X."                                                    .....XXX..................XXX.                                              ",
X."                                                  .......XXX..................XXX.        ..                                    ",
X."                                             .....   ....XXX..................XXX.        .                                     ",
X."                                       ..         ..    .XXX..................XXX.                                              ",
X."                                               .        .XXX..................XXX.     ..                                       ",
X."                                            ..          .XXX..................XXX.    .                                         ",
X."                                           ..           .XXX..................XXX.                                              ",
X."                                          .             .XXX..++++.....+++++..XXX.  ..                                          ",
X."                                                 ...    .X..+++++++..++++++++.XXX. .                                            ",
X."                                               ..       ..++++++++..+++++++++.XXX. .                                            ",
X."                                                      ..++++++++..+++++++++++.XXXX.          .                                  ",
X."                                                     .+++++++++.+++++++++++..XXXXX.       ..                                    ",
X."                                                    .++++++++++.+++++++++..XXXXXXX.    ..                                       ",
X."                                     ..            .+++++++++++++++++++++.XXXXXXXX.   ..                                        ",
X."                                        ..        ..++++++++++.+++++++++.XXXXXXXXX..                                            ",
X."                                          ..      .+++++++++++.+++++++++.XXXXXXXXX.............                                 ",
X."                                               ...++++++++++..++++++++++.XXXXXXXXX. ..                                          ",
X."                                                .+++++++++++.+++++++++++.XXXXXXXXX. ..                                          ",
X."                                                .+++++++++++.+++++++++++.XXXXXXXXX.    .                                        ",
X."                                               .++++++++++++.++++++++++.XXXXXXXXXX.     .                                       ",
X."                                               .+++++++++++.+++++++++++.XXXXXXXXXXX.     ..                                     ",
X."                                     ...........+++++++++++.+++++++++++.XXXXXXXXXXX.      ..                                    ",
X."                               .               .+++++++++++.+++++++++++.XXXXXXXXXXXX        ..                                  ",
X."                                               .+++++++++++.+++++++++++.XXXXXXXXXXXX         .                                  ",
X."                                          .    .+++++++++++.+++++++++++.XXXXXXXXXXXX..                                          ",
X."                                         ..    .+++++++++++.+++++++++++.XXXXXXXXXXXX..                                          ",
X."                                      ..       .+++++++++++++++++++++++.XXXXXXXXXXXXXX                                          ",
X."                                               .+++++++++++++++++++++++.XXXXXXXXXXXXXX.                                         ",
X."                                  ..           .+++++++++++++++++++++++.XXXXXXXXXXXXXX.              ...                        ",
X."                                               .+++++++++++++++++++++++.XXXXXXXXXXXXXX..           ...                          ",
X."                                               .+++++++++++++++++++++++.XXXXXXXXXXXXXXX..     ...                               ",
X."                                               .++++++++++++++++++++++.XXXXXXXXXXXXXXXXXX  .                                    ",
X."                                                .++++++++++++++++++++.XXXXXXXXXXXXXXXXXXX.........                              ",
X."                                                 ..+++++++++++++++++.XXXXXXXXXXXXXXXXXXXX.. ..       ...                        ",
X."                                                   ...++++++++++++..XXXXXXXXXXXXXXXXXXXXX...   .          ..                    ",
X."                                                      ............XXXXXXXXXXXXXXXXXXXX.......    .           ..                 ",
X."                                                      .XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.......    .             ..               ",
X."                                           .....     .XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX..........    .              ..             ",
X."                                               ..   .XXXXXXXXXXXXXXXXXXXXXXXXXXXXX.............                                 ",
X."                                           ..........XXXXXXXXXXXXXXXXXXXXXXXXXXX................       .                        ",
X."                                          ..    .....XXXXXXXXXXXXXXXXXXXXXXXXXX..................      .                        ",
X."                                             ..     .XXXXXXXXXXXXXXXXXXXXXXXX.....................   ..                         ",
X."                                           ...      .XXXXXXXXXXXXXXXXXXXXXXX......................   .                          ",
X."                                         ..        .XXXXXXXXXXXXXXXXXXXXXX......................... .                           ",
X."                                        ..         .XXXXXXXXXXXXXXXXXXXXX.......................... .        ......             ",
X."                                    .             ..XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX...............                           ",
X."                                  ...             .XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX..                           ",
X."                                                  .XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.                           ",
X."                                                  .XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.                           ",
X."                                                                                                                                ",
X."                                                                                                                                ",
X."                                                                                                                                ",
X."                                                                                                                                ",
X."                                                                                                                                ",
X."                                                                                                                                "};
SHARC_EOF
if [ 17469 -ne `wc -c < cartoon.xpm` ]
then echo "$0: transmit error 'cartoon.xpm' (should have been 17469 chars)"
fi
fi # end of overwriting check

